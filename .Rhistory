# Generate some fake data to test with
set.seed(42) #create fake data with built-in library
population1 = rnorm(1000) #not working with vectors, so we use =
population2 = sample(population1, 200) #sample of population1
t.test(population2,mu=mean(population1))
population3 = rnorm(1000, -2)
t.test(population2,mu=mean(population3))
library(readr)
sardines <- read_csv("Desktop/Class Folder/Student Resources/15-2-Student_Resources/03-Stu_Sardines/Resources/sardines.csv")
View(sardines)
head(sardines)
location1 <- sardines$location == 1
location1
head(location1)
fuck
mean(sardines)
sardines
location1 <- sardines$vertebrae where sardines$location == 1
location1 <- sardines[vertebrae] where sardines[location] == 1
location1
remove location1
location 1 <- sardines$vertebrae if sardines$location == 1
Alaska <- <- sardines$vertebrae if sardines$location == 1
Alaska <- sardines$vertebrae if sardines$location == 1
Alaska <- if (sardines$location == 1){}
Alaska <- if (sardines$location == 1){return sardines$vertebrae}
Alaska <- if (sardines$location == 1){print sardines$vertebrae}
Alaska <- sardines[location == 1]
Alaska <- sardines[location] == 1
Alaska <- sardines(sardines$location == 1)
population1 = subset(sardines, location == 1)
mean(population1[[vertebrae]])
population1 = subset(sardines, location == 1)
mean(population1[[vertebrae]])
setwd("~/Desktop/Class Folder/MechaCar_Statistical_Analysis")
install.packages('dplyr')
library('dplyr')
install.packages("ggplot2")
library("ggplot2")
rm(list = ls())
mecha_table <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
# perform linear regression
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_table)
# determine p-value and r-squared value with summary()
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=mecha_table))
suspension_table <- read.csv(file='Suspension_Coil.csv', check.names=F, stringsAsFactors = F)
total_summary <- suspension_table %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(total_summary)
View(suspension_table)
View(suspension_table)
lot_summary <- suspension_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
?t.test()
t.test(lot_summary$Mean, mu=1500)
t.test(lot_summary, subset(lot_summary$Mean[1]), mu=1500)
t.test(lot_summary, subset=1, mu=1500)
t.test(lot_summary$Mean, subset=1, mu=1500)
t.test(lot_summary$Mean, subset=2, mu=1500)
t.test(lot_summary$Mean, subset=3, mu=1500)
t.test(lot_summary$Mean, subset= lot_summary$Manufacturing_Lot = 'Lot1', mu=1500)
# t-test per lot, mu=1500 (population)
t.test(lot_summary$Mean, subset= lot_summary$Manufacturing_Lot == 'Lot1', mu=1500)
t.test(lot_summary$Mean, subset= lot_summary$Manufacturing_Lot == 'Lot2', mu=1500)
t.test(lot_summary$Mean, subset= lot_summary$Manufacturing_Lot == 'Lot3', mu=1500)
View(suspension_table)
t.test(lot_summary$Mean, mu=1500)
t.test(mean(suspension_table$PSI), subset(suspension_table$Manufacturing_Lot == 'Lot1'), mu=1500)
t.test(mean(suspension_table$PSI), subset = suspension_table$Manufacturing_Lot == 'Lot1'), mu=1500)
# t-test per lot, mu=1500 (population)
t.test(mean(suspension_table$PSI), subset = suspension_table$Manufacturing_Lot == 'Lot1', mu=1500)
t.test(x= mean(suspension_table$PSI), mu=1500))
t.test(x= mean(suspension_table$PSI), mu=1500)
t.test(mean(suspension_table$PSI), mu=1500))
t.test(x = mean(suspension_table$PSI) , mu=1500)
t.test(x = mean(suspension_table$PSI), mu=1500)
t.test(x = suspension_table$PSI , mu=1500)
t.test(x= suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot1', mu=1500)
t.test(x=suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot2', mu=1500)
t.test(x=suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot3', mu=1500)
lot1 <- subset(suspension_table$Manufacturing_Lot == 'Lot1')
lot2 <- subset(suspension_table$Manufacturing_Lot == 'Lot2')
lot3 <- subset(suspension_table$Manufacturing_Lot == 'Lot3')
lot1 <- subset(suspension_table, Manufacturing_Lot == 'Lot1')
lot2 <- subset(suspension_table, Manufacturing_Lot == 'Lot2')
lot3 <- subset(suspension_table, Manufacturing_Lot == 'Lot3')
View(lot_summary)
View(lot1)
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
t.test(x=suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot1', mu=1500)
t.test(x=suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot2', mu=1500)
t.test(x=suspension_table$PSI, subset = suspension_table$Manufacturing_Lot == 'Lot3', mu=1500)
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
